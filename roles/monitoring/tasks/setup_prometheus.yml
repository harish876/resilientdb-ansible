---
- name: Creating prometheus user group
  group:
    name: "{{ prometheus_group_id }}"
    state: present
  become: true

- name: Creating prometheus user
  user:
    name: "{{ prometheus_user_id }}"
    groups: "{{ prometheus_group_id }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{ prometheus_user_id }} nologin User"
    createhome: "no"
    state: present
    append: yes

- name: Install prometheus
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: Copy prometheus file to bin
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "/usr/local/bin/prometheus"
    owner: "{{ prometheus_user_id }}"
    group: "{{ prometheus_group_id }}"
    remote_src: yes
    mode: 0755

- name: Creates directory
  file:
    path: "/data/prometheus/"
    state: directory
    owner: "{{ prometheus_user_id }}"
    group: "{{ prometheus_group_id }}"
    mode: 0755

- name: Delete prometheus tmp folder
  file:
    path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
    state: absent

- name: Creates directory
  file:
    path: "/etc/prometheus/"
    state: directory
    owner: "{{ prometheus_user_id }}"
    group: "{{ prometheus_group_id }}"
    mode: 0755

- name: config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.conf

- name: Copy systemd init file
  template:
    src: prometheus.init.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: systemd_reload

- name: Reload systemd
  command: systemctl daemon-reload

- name: Start prometheus service
  service:
    name: prometheus
    state: started
    enabled: yes

- name: Check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200
